---
# Postgres backup
- name: Get Postgres password
  shell: oc get secret postgresql -n {{ enmasse_namespace }} -o jsonpath='{ .data.database-password }' | base64 --decode
  register: enmasse_postgres_password

- name: Get Postgres username
  shell: oc get secret postgresql -n {{ enmasse_namespace }} -o jsonpath='{ .data.database-user }' | base64 --decode
  register: enmasse_postgres_username

- name: Get Postgres database
  shell: oc get secret postgresql -n {{ enmasse_namespace }} -o jsonpath='{ .data.database-name }' | base64 --decode
  register: enmasse_postgres_database

- name: Create the Postgres credentials secret for backup
  include_role:
    name: backup
    tasks_from: _create_postgres_secret.yml
  vars:
    secret_name: '{{ enmasse_backup_postgres_secret }}'
    secret_postgres_user: '{{ enmasse_postgres_username.stdout }}'
    secret_postgres_host: postgresql.enmasse.svc
    secret_postgres_database: '{{ enmasse_postgres_database.stdout }}'
    secret_postgres_password: '{{ enmasse_postgres_password.stdout }}'

- name: Create the enmasse Postgres CronJob
  shell: oc process -f {{ backup_resources_location }}/backup-cronjob-template.yaml \
    -p 'COMPONENT=postgres' \
    -p 'COMPONENT_SECRET_NAME={{ enmasse_backup_postgres_secret }}' \
    -p 'BACKEND_SECRET_NAME={{ aws_s3_backup_secret_name }}' \
    -p 'IMAGE={{ backup_image }}' \
    -p 'CRON_SCHEDULE={{ backup_schedule }}' \
    -p 'PRODUCT_NAME=amqonline' \
    -p 'NAME={{ enmasse_postgres_cronjob_name }}' | oc apply -n default -f -

# PV backup
- name: Create the enmasse PV CronJob
  shell: oc process -f {{ backup_resources_location }}/backup-cronjob-template.yaml \
    -p 'COMPONENT=enmasse_pv' \
    -p 'BACKEND_SECRET_NAME={{ aws_s3_backup_secret_name }}' \
    -p 'IMAGE={{ backup_image }}' \
    -p 'CRON_SCHEDULE={{ backup_schedule }}' \
    -p 'PRODUCT_NAME=amqonline' \
    -p 'NAME={{ enmasse_pv_cronjob_name }}' | oc apply -n default -f -

